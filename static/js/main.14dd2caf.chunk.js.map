{"version":3,"sources":["components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","theme","href","title","stroke","fill","strokeWidth","viewBox","height","width","xmlns","onClick","toggleTheme","style","cursor","d","defaultProps","aboutText","Textform","ModalCloseBtn","useRef","document","body","backgroundColor","color","startUpText","toastifyTheme","localStorage","getItem","_useState","useState","_useState2","Object","slicedToArray","Text","setText","_useState3","_useState4","Changetext","setChangetext","_useState5","_useState6","Replacedtext","setReplacedtext","handleChange","e","target","name","value","heading","rows","onChange","id","flexWrap","disabled","length","toUpperCase","toast","success","position","transition","Flip","autoClose","toLowerCase","newText","replace","txt","charAt","substr","split","join","data-bs-toggle","data-bs-target","navigator","clipboard","writeText","then","catch","error","setItem","removeItem","react_toastify_esm","filter","data-bs-backdrop","data-bs-keyboard","tabIndex","aria-labelledby","aria-hidden","type","data-bs-dismiss","aria-label","ref","replaceAll","current","click","App","startUpTheme","setTheme","Navbar_Navbar","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.14dd2caf.chunk.js","sourcesContent":["import React from 'react'\nimport './Navbar.css'\nimport PropTypes from 'prop-types'\n\nexport default function Navbar(props) {\n\n  return (\n    <>\n      <nav className={`navbar navbar-expand-lg bg-${props.theme} navbar-${props.theme}`}>\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand flarge\" href=\"/\">{props.title}</a>\n            <svg stroke=\"black\" fill={props.theme === 'dark' ? 'white' : 'black'} strokeWidth=\"0\" viewBox=\"0 0 16 16\" className=\"md:block text-purple-700 mt-1 ml-2 cursor-pointer dark:text-white\" height=\"28\" width=\"28\" xmlns=\"http://www.w3.org/2000/svg\" onClick={props.toggleTheme} style={{ cursor: 'pointer' }}>\n              <path d=\"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z\">\n              </path>\n              <path d=\"M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z\"></path>\n            </svg>\n        </div>\n      </nav>\n    </>\n  )\n}\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string\n}\n\nNavbar.defaultProps = {\n  title: 'Set title here',\n  aboutText: 'Set about'\n}\n","import React, { useState, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { ToastContainer, toast, Flip } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Navbar.css'\n\nexport default function Textform(props) {\n    const ModalCloseBtn = useRef(null)\n    document.body.style.backgroundColor = props.theme === 'dark' ? '#212529' : 'white';\n    document.body.style.color = props.theme === 'dark' ? 'white' : 'black';\n    let startUpText, toastifyTheme = props.theme === 'dark' ? 'dark' : 'light';\n    if (localStorage.getItem(\"Text\") == null) {\n        startUpText = \"\";\n    }\n    else {\n        startUpText = localStorage.getItem(\"Text\")\n    }\n\n    const [Text, setText] = useState(startUpText); //state\n    const [Changetext, setChangetext] = useState(\"\");\n    const [Replacedtext, setReplacedtext] = useState(\"\");\n\n    function handleChange(e) {\n        if (e.target.name === \"textArea\") {\n            setText(e.target.value);\n        }\n        else if (e.target.name === \"changeText\") {\n            setChangetext(e.target.value);\n        }\n        else {\n            setReplacedtext(e.target.value);\n        }\n    }\n\n    function toUpperCase() {\n\n        setText(Text.toUpperCase());\n        toast.success('Succesfully converted to Uppercase', {\n            theme: toastifyTheme,\n            position: 'top-center',\n            transition: Flip,\n            autoClose: 3000\n        });\n\n    }\n    function toLowerCase() {\n        setText(Text.toLowerCase());\n        toast.success('Succesfully converted to Lowercase', {\n            theme: toastifyTheme,\n            position: 'top-center',\n            transition: Flip,\n            autoClose: 3000\n        });\n\n    }\n    function rmExtraSpaces() {\n        let newText = Text.split(/[ ]+/);\n        newText = newText.join(\" \");\n        setText(newText);\n        toast.success('Succesfully Remove Extra Spaces', {\n            theme: toastifyTheme,\n            position: 'top-center',\n            transition: Flip,\n            autoClose: 3000\n        });\n\n    }\n    function toTitleCase() {\n        function toProperCase(str) {\n            return str.replace(/\\w\\S*/g, function (txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\n        };\n        let newText = toProperCase(Text);\n        setText(newText);\n        toast.success('Succesfully converted to Titlecase', {\n            theme: toastifyTheme,\n            position: 'top-center',\n            transition: Flip,\n            autoClose: 3000\n        });\n\n    }\n    function copyToClipboard() {\n        navigator.clipboard.writeText(Text).then(() => {\n            toast.success('Succesfully copied to clipboard', {\n                theme: toastifyTheme,\n                position: 'top-center',\n                transition: Flip,\n                autoClose: 3000\n            });\n        })\n            .catch(() => {\n                toast.error(\"Copy Failed\", {\n                    autoClose: 3000,\n                    theme: toastifyTheme,\n                });\n            })\n\n    }\n    function findAndReplace() {\n        setText(Text.replaceAll(Changetext, Replacedtext));\n\n        toast.success('Succesfully replaced text', {\n            theme: toastifyTheme,\n            position: 'top-center',\n            transition: Flip,\n            autoClose: 3000\n        });\n        setChangetext(\"\");\n        setReplacedtext(\"\");\n        ModalCloseBtn.current.click();\n    }\n    function saveText() {\n        localStorage.setItem(\"Text\", Text);\n        toast.success('Succesfully saved your text', {\n            theme: toastifyTheme,\n            position: 'top-center',\n            transition: Flip,\n            autoClose: 3000\n        });\n\n    }\n    function clearText() {\n        setText(\"\")\n        localStorage.removeItem(\"Text\")\n        toast.success('Succesfully clear your text', {\n            theme: toastifyTheme,\n            position: 'top-center',\n            transition: Flip,\n            autoClose: 3000\n        });\n    }\n    return (\n        <>\n            <div>\n                <div className=\"my-3 container py-1\">\n                    <h1 className=\"my-3 \">{props.heading}</h1>\n                    <textarea className=\"form-control my-3\" rows=\"8\" value={Text} onChange={handleChange} style={{ backgroundColor: props.theme === 'dark' ? '#212529' : 'white', color: props.theme === 'dark' ? 'white' : 'black' }} id=\"textArea\" name=\"textArea\"></textarea>\n                    <div className=\"container d-flex\" style={{ flexWrap: 'wrap' }}>\n                        <button disabled={Text.length <= 0} className=\"btn btn-primary ml\" onClick={toUpperCase}>Convert To Uppercase</button>\n                        <button disabled={Text.length <= 0} className=\"btn btn-primary ml\" onClick={toLowerCase}>Convert To Lowercase</button>\n                        <button disabled={Text.length <= 0} className=\"btn btn-primary ml\" onClick={toTitleCase}>Convert To Titlecase</button>\n                        <button disabled={Text.length <= 0} className=\"btn btn-primary ml\" onClick={rmExtraSpaces}>Remove Extra Spaces</button>\n                        <button disabled={Text.length <= 0} className=\"btn btn-primary ml\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\" >Find &amp; Replace</button>\n                        <button disabled={Text.length <= 0} className=\"btn btn-primary ml\" onClick={copyToClipboard}>Copy to Clipboard</button>\n                        <button disabled={Text.length <= 0} className=\"btn btn-primary ml\" onClick={saveText}>Save Text</button>\n                        <button disabled={Text.length <= 0} className=\"btn btn-primary ml\" onClick={clearText}>Clear Text</button>\n                    </div>\n                    <ToastContainer />\n\n                </div>\n                <div className=\"container my-3\">\n                    <h2 className='heading'>Your Text Summary</h2>\n                    <p>{Text === '' ? '0' : Text.split(/\\s+/).filter((e) => { return e.length !== 0 }).length} words and {Text.length} characters</p>\n                    <h2 className=\"heading\">Preview</h2>\n                    <p>{Text.length > 0 ? Text : \"Nothing to preview\"}</p>\n                </div>\n                <div className=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog modal-dialog-centered\">\n                        <div className=\"modal-content\" style={{ backgroundColor: props.theme === 'dark' ? '#212529' : 'white', color: props.theme === 'dark' ? 'white' : 'black' }}>\n                            <div className=\"modal-header\">\n                                <h1 className=\"modal-title fs-5\" id=\"staticBackdropLabel\">Find &amp; Replace</h1>\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                            </div>\n                            <div className=\"modal-body\" id=\"modalbody\">\n                                <h3>Changeable Text</h3>\n                                <input type=\"text\" className=\"form-control mb-3\" id=\"changeableText\" name=\"changeText\" onChange={handleChange} value={Changetext} style={{ color: \"inherit\", backgroundColor: \"inherit\" }} />\n                                <h3>Replaced Text</h3>\n                                <input type=\"text\" className=\"form-control mb-3\" id=\"replaceText\" name=\"Replacedtext\" onChange={handleChange} value={Replacedtext} style={{ color: \"inherit\", backgroundColor: \"inherit\" }} />\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" ref={ModalCloseBtn}>Close</button>\n                                <button type=\"button\" className=\"btn btn-primary\" disabled={Changetext.length <= 0 || Replacedtext.length <= 0} onClick={findAndReplace}>Replace</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nTextform.propTypes = {\n    heading: PropTypes.string.isRequired\n}","import './App.css';\nimport React, { useState } from 'react'\nimport Navbar from './components/Navbar'\nimport Textform from './components/Textform'\n\nfunction App() {\n\n  let startUpTheme;\n  if (localStorage.getItem(\"Theme\") == null) {\n    startUpTheme = \"light\";\n  }\n  else {\n    startUpTheme = localStorage.getItem(\"Theme\")\n  }\n\n  const [theme, setTheme] = useState(startUpTheme)\n\n  function toggleTheme() {\n    if (theme === 'light') {\n      document.body.style.backgroundColor = '#212529';\n      document.body.style.color = 'white'\n      setTheme('dark')\n      localStorage.setItem(\"Theme\", \"dark\");\n    }\n    else {\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black'\n      setTheme('light')\n      localStorage.setItem(\"Theme\", \"light\");\n    }\n\n  }\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" aboutText=\"About\" theme={theme} toggleTheme={toggleTheme} />\n      <Textform heading=\"Enter Text To Analyze Below\" theme={theme} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}